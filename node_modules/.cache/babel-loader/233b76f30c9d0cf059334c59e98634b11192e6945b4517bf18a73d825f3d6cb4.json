{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAJAR\\\\socratic-debate-simulator\\\\src\\\\components\\\\experts\\\\ExpertSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getRelevantExperts } from '../../data/experts';\nimport ExpertCard from './ExpertCard';\nimport './ExpertSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpertSelection = ({\n  onExpertsChange,\n  selectedExperts,\n  topic\n}) => {\n  _s();\n  const [availableExperts, setAvailableExperts] = useState([]);\n  const [suggestedCombinations, setSuggestedCombinations] = useState([]);\n  useEffect(() => {\n    if (topic) {\n      const experts = getRelevantExperts(topic);\n      setAvailableExperts(experts);\n\n      // Generate suggested combinations (in a real app, this would be more sophisticated)\n      if (experts.length >= 4) {\n        setSuggestedCombinations([{\n          name: \"Balanced Viewpoints\",\n          experts: [experts[0].id, experts[1].id, experts[2].id, experts[3].id]\n        }, {\n          name: \"Contrasting Perspectives\",\n          experts: [experts[0].id, experts[3].id, experts[5].id, experts[7].id]\n        }]);\n      }\n    }\n  }, [topic]);\n  const toggleExpert = expertId => {\n    if (selectedExperts.includes(expertId)) {\n      onExpertsChange(selectedExperts.filter(id => id !== expertId));\n    } else if (selectedExperts.length < 4) {\n      onExpertsChange([...selectedExperts, expertId]);\n    }\n  };\n  const selectCombination = expertIds => {\n    onExpertsChange(expertIds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expert-selection\",\n    children: [suggestedCombinations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested-combinations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Suggested Combinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combinations-list\",\n        children: suggestedCombinations.map((combo, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"combination-button\",\n          onClick: () => selectCombination(combo.experts),\n          children: combo.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experts-grid\",\n      children: availableExperts.map(expert => /*#__PURE__*/_jsxDEV(ExpertCard, {\n        expert: expert,\n        isSelected: selectedExperts.includes(expert.id),\n        onSelect: () => toggleExpert(expert.id)\n      }, expert.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-info\",\n      children: selectedExperts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select 2-4 experts to participate in the debate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected: \", selectedExperts.length, \" of 4 experts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpertSelection, \"orBUgKckaOAyzS9/bd07pYZmLM8=\");\n_c = ExpertSelection;\nexport default ExpertSelection;\nvar _c;\n$RefreshReg$(_c, \"ExpertSelection\");","map":{"version":3,"names":["React","useEffect","useState","getRelevantExperts","ExpertCard","jsxDEV","_jsxDEV","ExpertSelection","onExpertsChange","selectedExperts","topic","_s","availableExperts","setAvailableExperts","suggestedCombinations","setSuggestedCombinations","experts","length","name","id","toggleExpert","expertId","includes","filter","selectCombination","expertIds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","combo","index","onClick","expert","isSelected","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/HAJAR/socratic-debate-simulator/src/components/experts/ExpertSelection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getRelevantExperts } from '../../data/experts';\r\nimport ExpertCard from './ExpertCard';\r\nimport './ExpertSelection.css';\r\n\r\nconst ExpertSelection = ({ onExpertsChange, selectedExperts, topic }) => {\r\n  const [availableExperts, setAvailableExperts] = useState([]);\r\n  const [suggestedCombinations, setSuggestedCombinations] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (topic) {\r\n      const experts = getRelevantExperts(topic);\r\n      setAvailableExperts(experts);\r\n      \r\n      // Generate suggested combinations (in a real app, this would be more sophisticated)\r\n      if (experts.length >= 4) {\r\n        setSuggestedCombinations([\r\n          {\r\n            name: \"Balanced Viewpoints\",\r\n            experts: [experts[0].id, experts[1].id, experts[2].id, experts[3].id]\r\n          },\r\n          {\r\n            name: \"Contrasting Perspectives\",\r\n            experts: [experts[0].id, experts[3].id, experts[5].id, experts[7].id]\r\n          }\r\n        ]);\r\n      }\r\n    }\r\n  }, [topic]);\r\n  \r\n  const toggleExpert = (expertId) => {\r\n    if (selectedExperts.includes(expertId)) {\r\n      onExpertsChange(selectedExperts.filter(id => id !== expertId));\r\n    } else if (selectedExperts.length < 4) {\r\n      onExpertsChange([...selectedExperts, expertId]);\r\n    }\r\n  };\r\n  \r\n  const selectCombination = (expertIds) => {\r\n    onExpertsChange(expertIds);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"expert-selection\">\r\n      {suggestedCombinations.length > 0 && (\r\n        <div className=\"suggested-combinations\">\r\n          <h3>Suggested Combinations</h3>\r\n          <div className=\"combinations-list\">\r\n            {suggestedCombinations.map((combo, index) => (\r\n              <button \r\n                key={index}\r\n                className=\"combination-button\"\r\n                onClick={() => selectCombination(combo.experts)}\r\n              >\r\n                {combo.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"experts-grid\">\r\n        {availableExperts.map(expert => (\r\n          <ExpertCard\r\n            key={expert.id}\r\n            expert={expert}\r\n            isSelected={selectedExperts.includes(expert.id)}\r\n            onSelect={() => toggleExpert(expert.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"selection-info\">\r\n        {selectedExperts.length === 0 ? (\r\n          <p>Select 2-4 experts to participate in the debate</p>\r\n        ) : (\r\n          <p>Selected: {selectedExperts.length} of 4 experts</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpertSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}