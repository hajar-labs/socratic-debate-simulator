{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAJAR\\\\socratic-debate-simulator\\\\src\\\\components\\\\experts\\\\ExpertCard.js\";\nimport React from 'react';\nimport './ExpertCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpertCard = ({\n  expert,\n  isSelected,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `expert-card ${isSelected ? 'selected' : ''}`,\n    onClick: onSelect,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-avatar\",\n      style: {\n        backgroundImage: `url(${expert.avatar})`\n      },\n      children: isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-badge\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"expert-name\",\n        children: expert.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expert-title\",\n        children: expert.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expert-areas\",\n        children: expert.areas.map((area, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"area-tag\",\n          children: area\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"expert-perspective\",\n        children: expert.perspectives[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpertCard;\nexport default ExpertCard;\nvar _c;\n$RefreshReg$(_c, \"ExpertCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpertCard","expert","isSelected","onSelect","className","onClick","children","style","backgroundImage","avatar","fileName","_jsxFileName","lineNumber","columnNumber","name","title","areas","map","area","index","perspectives","_c","$RefreshReg$"],"sources":["C:/Users/HAJAR/socratic-debate-simulator/src/components/experts/ExpertCard.js"],"sourcesContent":["import React from 'react';\r\nimport './ExpertCard.css';\r\n\r\nconst ExpertCard = ({ expert, isSelected, onSelect }) => {\r\n  return (\r\n    <div \r\n      className={`expert-card ${isSelected ? 'selected' : ''}`}\r\n      onClick={onSelect}\r\n    >\r\n      <div className=\"expert-avatar\" style={{ backgroundImage: `url(${expert.avatar})` }}>\r\n        {isSelected && <div className=\"selected-badge\">âœ“</div>}\r\n      </div>\r\n      <div className=\"expert-info\">\r\n        <h3 className=\"expert-name\">{expert.name}</h3>\r\n        <p className=\"expert-title\">{expert.title}</p>\r\n        <div className=\"expert-areas\">\r\n          {expert.areas.map((area, index) => (\r\n            <span key={index} className=\"area-tag\">{area}</span>\r\n          ))}\r\n        </div>\r\n        <p className=\"expert-perspective\">\r\n          {expert.perspectives[0]}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpertCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EACvD,oBACEJ,OAAA;IACEK,SAAS,EAAE,eAAeF,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACzDG,OAAO,EAAEF,QAAS;IAAAG,QAAA,gBAElBP,OAAA;MAAKK,SAAS,EAAC,eAAe;MAACG,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOP,MAAM,CAACQ,MAAM;MAAI,CAAE;MAAAH,QAAA,EAChFJ,UAAU,iBAAIH,OAAA;QAAKK,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACNd,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAE,QAAA,gBAC1BP,OAAA;QAAIK,SAAS,EAAC,aAAa;QAAAE,QAAA,EAAEL,MAAM,CAACa;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9Cd,OAAA;QAAGK,SAAS,EAAC,cAAc;QAAAE,QAAA,EAAEL,MAAM,CAACc;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9Cd,OAAA;QAAKK,SAAS,EAAC,cAAc;QAAAE,QAAA,EAC1BL,MAAM,CAACe,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BpB,OAAA;UAAkBK,SAAS,EAAC,UAAU;UAAAE,QAAA,EAAEY;QAAI,GAAjCC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNd,OAAA;QAAGK,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAC9BL,MAAM,CAACmB,YAAY,CAAC,CAAC;MAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GAvBIrB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}