{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAJAR\\\\socratic-debate-simulator\\\\src\\\\pages\\\\DebatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport '../assets/styles/DebatePage.css';\nimport experts from '../data/experts';\nimport DebateTheater from '../components/debate/DebateTheater';\nimport DebateTimeline from '../components/debate/DebateTimeline';\nimport InteractionPanel from '../components/debate/InteractionPanel';\nimport KnowledgeSynthesis from '../components/visualization/KnowledgeSynthesis';\nimport { generateDebate } from '../services/debateService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DebatePage = () => {\n  _s();\n  const {\n    topicId\n  } = useParams();\n  const location = useLocation();\n  const [topic, setTopic] = useState('');\n  const [selectedExperts, setSelectedExperts] = useState([]);\n  const [debateFormat, setDebateFormat] = useState('standard');\n  const [loading, setLoading] = useState(true);\n  const [debate, setDebate] = useState(null);\n  const [currentStage, setCurrentStage] = useState(0);\n  useEffect(() => {\n    if (location.state) {\n      setTopic(location.state.topic);\n      setSelectedExperts(location.state.experts.map(id => experts.find(expert => expert.id === id)));\n      setDebateFormat(location.state.format);\n    } else {\n      // In a real app, we would fetch this information from an API\n      // using the topicId from params\n      const decodedTopic = decodeURIComponent(topicId).replace(/-/g, ' ');\n      setTopic(decodedTopic);\n      // For demo purposes, select some default experts\n      setSelectedExperts([experts[0], experts[1], experts[3]]);\n    }\n  }, [topicId, location.state]);\n  useEffect(() => {\n    if (topic && selectedExperts.length > 0) {\n      setLoading(true);\n      // In a real app, this would be an asynchronous API call\n      const generatedDebate = generateDebate(topic, selectedExperts, debateFormat);\n      setDebate(generatedDebate);\n      setLoading(false);\n    }\n  }, [topic, selectedExperts, debateFormat]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Assembling experts and generating debate...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"debate-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"debate-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debate-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"format-badge\",\n          children: [debateFormat, \" Format\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"experts-count\",\n          children: [selectedExperts.length, \" Experts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"debate-content\",\n      children: [/*#__PURE__*/_jsxDEV(DebateTheater, {\n        experts: selectedExperts,\n        debate: debate,\n        currentStage: currentStage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DebateTimeline, {\n        debate: debate,\n        currentStage: currentStage,\n        onStageSelect: setCurrentStage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interaction-container\",\n        children: /*#__PURE__*/_jsxDEV(InteractionPanel, {\n          debate: debate,\n          currentStage: currentStage,\n          onAskQuestion: question => {\n            // In a real app, this would trigger an API call to generate a response\n            console.log(\"Question asked:\", question);\n          },\n          topic: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"knowledge-synthesis-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Knowledge Synthesis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KnowledgeSynthesis, {\n        debate: debate,\n        experts: selectedExperts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DebatePage, \"vH1oNYphnOVYYfyiFpnDle4ODgs=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = DebatePage;\nexport default DebatePage;\nvar _c;\n$RefreshReg$(_c, \"DebatePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","experts","DebateTheater","DebateTimeline","InteractionPanel","KnowledgeSynthesis","generateDebate","jsxDEV","_jsxDEV","DebatePage","_s","topicId","location","topic","setTopic","selectedExperts","setSelectedExperts","debateFormat","setDebateFormat","loading","setLoading","debate","setDebate","currentStage","setCurrentStage","state","map","id","find","expert","format","decodedTopic","decodeURIComponent","replace","length","generatedDebate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStageSelect","onAskQuestion","question","console","log","_c","$RefreshReg$"],"sources":["C:/Users/HAJAR/socratic-debate-simulator/src/pages/DebatePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport '../assets/styles/DebatePage.css';\r\nimport experts from '../data/experts';\r\nimport DebateTheater from '../components/debate/DebateTheater';\r\nimport DebateTimeline from '../components/debate/DebateTimeline';\r\nimport InteractionPanel from '../components/debate/InteractionPanel';\r\nimport KnowledgeSynthesis from '../components/visualization/KnowledgeSynthesis';\r\nimport { generateDebate } from '../services/debateService';\r\n\r\nconst DebatePage = () => {\r\n  const { topicId } = useParams();\r\n  const location = useLocation();\r\n  const [topic, setTopic] = useState('');\r\n  const [selectedExperts, setSelectedExperts] = useState([]);\r\n  const [debateFormat, setDebateFormat] = useState('standard');\r\n  const [loading, setLoading] = useState(true);\r\n  const [debate, setDebate] = useState(null);\r\n  const [currentStage, setCurrentStage] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    if (location.state) {\r\n      setTopic(location.state.topic);\r\n      setSelectedExperts(location.state.experts.map(id => \r\n        experts.find(expert => expert.id === id)\r\n      ));\r\n      setDebateFormat(location.state.format);\r\n    } else {\r\n      // In a real app, we would fetch this information from an API\r\n      // using the topicId from params\r\n      const decodedTopic = decodeURIComponent(topicId).replace(/-/g, ' ');\r\n      setTopic(decodedTopic);\r\n      // For demo purposes, select some default experts\r\n      setSelectedExperts([experts[0], experts[1], experts[3]]);\r\n    }\r\n  }, [topicId, location.state]);\r\n  \r\n  useEffect(() => {\r\n    if (topic && selectedExperts.length > 0) {\r\n      setLoading(true);\r\n      // In a real app, this would be an asynchronous API call\r\n      const generatedDebate = generateDebate(topic, selectedExperts, debateFormat);\r\n      setDebate(generatedDebate);\r\n      setLoading(false);\r\n    }\r\n  }, [topic, selectedExperts, debateFormat]);\r\n  \r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Assembling experts and generating debate...</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"debate-page\">\r\n      <header className=\"debate-header\">\r\n        <h1>{topic}</h1>\r\n        <div className=\"debate-meta\">\r\n          <span className=\"format-badge\">{debateFormat} Format</span>\r\n          <span className=\"experts-count\">{selectedExperts.length} Experts</span>\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"debate-content\">\r\n        <DebateTheater \r\n          experts={selectedExperts} \r\n          debate={debate}\r\n          currentStage={currentStage}\r\n        />\r\n        \r\n        <DebateTimeline \r\n          debate={debate}\r\n          currentStage={currentStage}\r\n          onStageSelect={setCurrentStage}\r\n        />\r\n        \r\n        <div className=\"interaction-container\">\r\n          <InteractionPanel \r\n            debate={debate}\r\n            currentStage={currentStage}\r\n            onAskQuestion={(question) => {\r\n              // In a real app, this would trigger an API call to generate a response\r\n              console.log(\"Question asked:\", question);\r\n            }}\r\n            topic={topic}\r\n          />\r\n        </div>\r\n      </main>\r\n      \r\n      <section className=\"knowledge-synthesis-section\">\r\n        <h2>Knowledge Synthesis</h2>\r\n        <KnowledgeSynthesis debate={debate} experts={selectedExperts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebatePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}